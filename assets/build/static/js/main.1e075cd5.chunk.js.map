{"version":3,"sources":["steps.js","Suite.js","Content_layout.js","Recap.js","Content.js","Theme.js","Env.js","App.js","reportWebVitals.js","index.js"],"names":["steps","Suite","context","useContext","stepContext","Stepper","orientation","activeStep","state","index","map","label","Step","StepButton","color","onClick","dispatcher","type","data","jobs","subjects","emotions","Job","Grid","container","spacing","direction","justifyContent","alignItems","job","item","Button","variant","Gender","Age","useState","age","setAge","Card","CardHeader","title","CardContent","Typography","Slider","defaultValue","step","min","max","valueLabelDisplay","onChange","val","target","value","Subject","sub","Emotion","emo","Validation","person","carac","gender","subject","emotion","p","url","URL","params","search","URLSearchParams","toString","fetch","then","response","json","console","log","sendData","Recap","props","List","ListItem","Divider","component","Content","content_layouts","prev_button","xs","theme","createMuiTheme","MuiButton","disableElevation","overrides","root","borderRadius","textTransform","containedPrimary","backgroundColor","palette","secondary","main","primary","dark","containedSecondary","fontWeight","handleSteps","action","newState","JSON","parse","stringify","initialState","React","Env","useReducer","Paper","elevation","style","height","width","margin","padding","Provider","ThemeProvider","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1e075cd5.chunk.js","sourcesContent":["const steps = ['gender','age','job', 'subject', 'emotion']\r\nexport default steps","import Stepper from '@mui/material/Stepper'\r\nimport Step from '@mui/material/Step';\r\nimport StepButton from '@mui/material/StepButton';\r\nimport React, {useContext} from 'react'\r\nimport steps from './steps'\r\nimport { stepContext } from './Env'\r\nconst Suite = () => {\r\n    const context = useContext(stepContext)\r\n    return (\r\n        <Stepper orientation = 'vertical' activeStep={context.state.index}>\r\n            {steps.map((label,index) =>\r\n                <Step key = {label}>       \r\n                    <StepButton color=\"inherit\" onClick={() => context.dispatcher({type: 'slidClick', data : index})}>\r\n                        Choose your {label} ! \r\n                    </StepButton>                 \r\n                </Step>\r\n                )\r\n                }\r\n        </Stepper>\r\n    )\r\n}\r\n\r\nexport default Suite\r\n","import React from 'react'\r\nimport Grid from '@mui/material/Grid'\r\nimport Button from '@mui/material/Button'\r\nimport { useContext , useState} from 'react'\r\nimport {stepContext} from './Env'\r\nimport Slider from '@mui/material/Slider'\r\nimport { Card, CardContent, CardHeader, Typography } from '@mui/material'\r\n\r\nconst jobs = ['Politician', 'Football player', 'Actor', 'Lawyer', 'Genius']\r\nconst subjects  = [\"Politics\", 'Sports', 'Culture', 'World News', 'Rap music']\r\nconst emotions = ['happiness', 'sadness', 'fear', 'anger']\r\nfunction sendData(p){\r\n    let url = new URL('http://127.0.0.1:5000/predict/')\r\n    const params = p\r\n    url.search = new URLSearchParams(params).toString();\r\n    fetch(url)\r\n        .then(response => response.json())\r\n        .then(data => console.log(data))\r\n}\r\nconst Job = () => {\r\n    const context = useContext(stepContext)\r\n    return (\r\n        <Grid container spacing  = {1}             direction=\"row\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\">\r\n            {jobs.map(\r\n                (job) => (<Grid item ><Button variant=\"contained\" onClick = {() => context.dispatcher({type: 'job', data: job })}>{job}</Button></Grid>)\r\n            )}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nconst Gender = () => {\r\n    const context = useContext(stepContext)\r\n    return (\r\n        <Grid container spacing  = {2}>\r\n            <Grid item>\r\n                <Button variant=\"contained\" onClick = {() => context.dispatcher({type: 'gender', data: 'M' })}>Male</Button>\r\n            </Grid>\r\n            <Grid item>\r\n                <Button variant=\"contained\" onClick = {() => context.dispatcher({type: 'gender', data: 'F' })}>Female</Button>\r\n            </Grid>\r\n\r\n\r\n\r\n        </Grid>\r\n    )\r\n}\r\n\r\nconst Age = () => {\r\n    const context = useContext(stepContext)\r\n    const [age, setAge] = useState(20)\r\n    function handleSliderChange(e){\r\n        setAge(e.target.value)\r\n    }\r\n    return (\r\n        <Grid container spacing  = {2}>\r\n            <Grid item>\r\n                <Card>\r\n                    <CardHeader title = {'Choose your age ! '}/>\r\n                    <CardContent>\r\n                        <Typography>You are {age} years old</Typography>\r\n                        <Slider  defaultValue = {20} step = {1} min  = {13} max = {130}  valueLabelDisplay=\"on\" onChange={(val) => handleSliderChange(val)}/>\r\n                        <Button variant=\"contained\" onClick = {() => context.dispatcher({type: 'age', data: age })}>Validate</Button>\r\n                    </CardContent>\r\n                </Card>\r\n            </Grid>\r\n            <Grid item>\r\n                \r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nconst Subject = () => {\r\n    const context = useContext(stepContext)\r\n    return (\r\n        <Grid container spacing  = {2}>\r\n            {subjects.map(\r\n                (sub) => (<Grid item><Button variant=\"contained\" onClick = {() => context.dispatcher({type: 'subject', data: sub })}>{sub}</Button></Grid>)\r\n            )}\r\n        </Grid>\r\n    )\r\n}\r\nconst Emotion = () => {\r\n    const context = useContext(stepContext)\r\n    return (\r\n        <Grid container spacing  = {2}>\r\n            {emotions.map(\r\n                (emo) => (<Grid item><Button  variant=\"contained\" onClick = {() => context.dispatcher({type: 'emotion', data: emo })}>{emo}</Button></Grid>)\r\n            )}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nconst Validation = () => {\r\n    const context = useContext(stepContext)\r\n    const person = context.state.carac\r\n    return (\r\n        <>\r\n        <Typography>\r\n            You are a {person.age} year old {person.job}. You identify yourself as a {person.gender} and would like to talk about {person.subject} with {person.emotion} feelings.\r\n        </Typography>\r\n        <Typography>\r\n            Is that who you are ? \r\n        </Typography>\r\n        <Button variant=\"contained\" onClick = {() => sendData(person)} >Validate ! </Button>\r\n        </>\r\n    )\r\n}\r\nexport {Job,Gender,Age, Subject, Emotion, Validation}\r\n","import React from 'react'\r\nimport { Card, CardContent, CardHeader , Typography, List, ListItem} from '@mui/material'\r\nimport Divider from '@mui/material/Divider';\r\n\r\nconst Recap = (props) => {\r\n    return (\r\n        <Card>\r\n            <CardContent>\r\n            <Typography>\r\n                You are : \r\n            </Typography>\r\n                <List>\r\n                    <ListItem>\r\n                         { props.person.gender !== '' ? (\" Gender : \" + props.person.gender) : '' }\r\n                    </ListItem>\r\n                    <Divider variant=\"middle\" component=\"li\" />\r\n                    <ListItem>\r\n                    { props.person.age !== 0 ? (\" Age : \" + props.person.age) : '' }\r\n                    </ListItem>\r\n                    <Divider variant=\"middle\" component=\"li\" />\r\n                    <ListItem>\r\n                    { props.person.job !== '' ? (\" Job : \" + props.person.job) : '' }\r\n                    </ListItem>\r\n                </List>\r\n                <Typography>\r\n                    You want to talk about :\r\n                </Typography>\r\n                <List>\r\n                \r\n                    <ListItem>\r\n                    { props.person.subject !== '' ? (\" Subject : \" + props.person.subject) : '' }\r\n                    </ListItem>\r\n                    <Divider variant=\"middle\" component=\"li\" />\r\n                    <ListItem>\r\n                    { props.person.emotion !== '' ? (\" Emotion : \" + props.person.emotion) : '' }\r\n                    </ListItem>\r\n                </List>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Recap\r\n","import React from 'react'\r\nimport Grid from '@mui/material/Grid'\r\nimport Button from '@mui/material/Button'\r\nimport Suite from './Suite'\r\nimport { useContext } from 'react'\r\nimport {stepContext} from './Env'\r\nimport {Job,Gender,Emotion, Age, Subject, Validation} from './Content_layout'\r\nimport Recap from './Recap'\r\n\r\nconst Content = () => {\r\n    const context = useContext(stepContext)\r\n    const content_layouts = [Gender(),Age(),Job(),Subject(),Emotion(), Validation()]\r\n    const index = context.state.index \r\n    const prev_button = (<Grid item ><Button variant=\"contained\" onClick = {() => context.dispatcher({data : context.state, type : 'prev'})}> previous</Button></Grid>) \r\n\r\n    return (\r\n       <>\r\n        <Grid container \r\n            spacing = {2}   \r\n            direction=\"row\"\r\n            justifyContent=\"space-between\"\r\n            alignItems=\"center\"\r\n            >\r\n        <Grid item xs = {3}> <Suite/></Grid>       \r\n        <Grid item xs = {4}>{content_layouts[context.state.index]}</Grid>\r\n        <Grid item xs = {4} ><Recap person = {context.state.carac}/></Grid>\r\n        \r\n       </Grid>\r\n       {index !== 0 && prev_button}\r\n       </>\r\n    )\r\n}\r\n\r\nexport default Content\r\n","import { createMuiTheme } from '@material-ui/core/styles';\r\nconst theme = createMuiTheme({\r\n\r\n});\r\n\r\n\r\n\r\n\r\ntheme.props = {\r\n\r\n  MuiButton: { // `MuiButton` is the global class name for the <Button /> component\r\n\r\n    disableElevation: true, // this prop disables the drop shadow on all Buttons\r\n\r\n  },\r\n\r\n};\r\ntheme.overrides = {\r\n\r\n  MuiButton: {\r\n\r\n    root: {\r\n\r\n      borderRadius: 0, // square corners\r\n\r\n      textTransform: 'none', // removes uppercase transformation\r\n\r\n    },\r\n\r\n    containedPrimary: {\r\n\r\n      '&:hover': { // changes colors for hover state\r\n\r\n        backgroundColor: theme.palette.secondary.main,\r\n\r\n        color: theme.palette.primary.dark,\r\n\r\n      },\r\n\r\n    },\r\n\r\n    containedSecondary: {\r\n\r\n      fontWeight: 700, // makes text bold\r\n\r\n    },\r\n\r\n  },\r\n\r\n};\r\n\r\nexport default theme;","import * as React from 'react'\r\nimport { useReducer } from 'react'\r\nimport Paper from '@mui/material/Paper'\r\nimport Content from './Content'\r\nimport theme from './Theme'\r\nimport { ThemeProvider } from '@mui/material'\r\n\r\nfunction handleSteps(state, action) {\r\n    let newState = JSON.parse(JSON.stringify(state))\r\n    switch(action.type){\r\n        case 'prev':\r\n            newState.index = state.index -1;\r\n            break;\r\n        case 'slidClick':\r\n            newState.index= action.data\r\n            break;\r\n        default:\r\n            newState.index = state.index +1;\r\n            newState.carac[action.type] = action.data\r\n            break;\r\n    }\r\n    return newState\r\n}\r\n\r\nconst initialState = {index: 0, carac : {age: 0, gender : '', job: '', subject : '', emotion: ''} }\r\nconst stepContext = React.createContext()\r\nconst Env = () => {\r\n\r\n    const [state,dispatcher] = useReducer(handleSteps, initialState)\r\n    return (\r\n        <Paper elevation = {3} style = {{height: 500,width: 800, margin: 'auto', padding : 30}}>\r\n            <stepContext.Provider value = {{state, dispatcher}}><ThemeProvider theme = {theme}><Content/></ThemeProvider></stepContext.Provider>\r\n        </Paper>\r\n    )\r\n}\r\nexport {stepContext}\r\nexport default Env\r\n","import './App.css';\nimport  Env from './Env.js'\nfunction App() {\n  return (\n    <Env/>    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}